name: Build, Test, and Deploy to Dev

on: 
  push:
    branches:
      - develop
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - develop

env:
  SQLX_OFFLINE: true

jobs:
  build_backend_app:
    name: Build Rust Backend App Image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Web/backend
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Paths Changes Filter
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            Backend:
              - 'Web/backend/**'
            
      # - name: Build cache dependencies
      #   # if: steps.filter.outputs.Backend == 'true'
      #   uses: actions/cache@v3
      #   with: 
      #     path: |
      #       ~/.cargo
      #       target/
      #     key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      #     restore-keys: ${{ runner.os }}-cargo-
      # - name: Install latest rust toolchain
      #   # if: steps.filter.outputs.Backend == 'true'
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: stable
      # - name: Build and test code
      #   # if: steps.filter.outputs.Backend == 'true'
      #   run: |
      #     cargo build --verbose
      #     cargo test --verbose
      - name: Setup docker build
        # if: steps.filter.outputs.Backend == 'true'
        uses: docker/setup-buildx-action@v3
      - name: Log In into Docker Hub
        # if: steps.filter.outputs.Backend == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_SECRET_TOKEN }}
      - name: Check directory
        run: pwd
      - name: Check directory list
        run: ls -lah
      - name: Build and push Docker images
        # if: steps.filter.outputs.Backend == 'true'
        uses: docker/build-push-action@v5
        with:
          file: Web/backend/Dockerfile
          push: true
          tags: metadikti/metaversitas:webapp_backend_latest

  # deploy:
  #   needs: [build_backend_app]
  #   runs-on: ubuntu-latest
    
